name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '**/README.md'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '**/README.md'

env:
  NODE_VERSION: 20.x
  # webkit: MacOS & iOS Safari engine
  E2E_DEVICES: '["chrome", "webkit"]'

jobs:
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - name: Setup
        run: yarn install --frozen-lockfile
      - name: TypeScript Check
        run: yarn vue-tsc
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - name: Setup
        run: yarn install --frozen-lockfile
      - name: ESLint
        run: yarn eslint .
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - name: Setup
        run: yarn install --frozen-lockfile
      - name: Store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(yarn list -p '@playwright/test' | grep @playwright | sed 's/.*@//')
          echo "Playwright's Version: ${{ env.PLAYWRIGHT_VERSION }}"
          echo "PLAYWRIGHT_VERSION=${{ env.PLAYWRIGHT_VERSION }}" >> $GITHUB_ENV
      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}-${{ join(fromJson(env.E2E_DEVICES), '-') }}
      - name: Install Playwright Browsers
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: yarn playwright install --with-deps ${{ join(fromJson(env.E2E_DEVICES), ' ') }}
      - name: Install system dependencies for WebKit
        # ref: https://github.com/microsoft/playwright/issues/30538#issuecomment-2185965508
        # Some webkit deps lay outside the playwright cache and will need to be installed separately
        if: ${{ contains(env.E2E_DEVICES, 'webkit') && steps.cache-playwright-browsers.outputs.cache-hit == 'true' }}
        run: yarn playwright install-deps webkit
      - name: Playwright
        run: yarn bddgen && yarn playwright test
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - name: Setup
        run: yarn install --frozen-lockfile
      - name: Vitest
        run: yarn vitest --run --coverage --passWithNoTests
